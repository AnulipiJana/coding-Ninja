/*CN5_1> Write a program that takes a character as input and prints either 1, 0, or -1 according to the following rules.

1, if the character is an uppercase alphabet (A - Z)
0, if the character is a lowercase alphabet (a - z)
-1, if the character is not an alphabet

Sample Input 1 :
v
Sample Output 1 :
0*/
ANS:
import java.lang.*; 
import java.util.*;
public class Solution {
    public static void main(String[] args) {
        // Write your code here

        Scanner sc=new Scanner(System.in);
        char n = sc.next().charAt(0);        
        int a=n;
        if(a>=65 && a<=90)
        {
            System.out.print("1");
        }
        else if(a>=97 && a<=122)
        {
             System.out.print("0");
        }
        else
        {
             System.out.print("-1");
        }
      
    }
}

/*CN5_2> Write a program to calculate the total salary of a person. The user has to enter the basic salary (an integer) and the grade (an uppercase character), and depending upon which the total salary is calculated as -
totalSalary = basic + hra + da + allow – pf
where :
hra   = 20% of basic
da    = 50% of basic
allow = 1700 if grade = ‘A’
allow = 1500 if grade = ‘B’
allow = 1300 if grade = ‘C' or any other character
pf    = 11% of basic.*/
ANS:
  import java.util.Scanner;
import java.lang.Math; 
class Solution 
{	
	public static void main(String[] args) 
	{
		Scanner s=new Scanner(System.in);
		int bs=s.nextInt();
		String str=s.next();
		char c=str.charAt(0);
		int all;
		if(c==65)
		{
			all=1700;
		}
		else if(c==66)
		{
			all=1500;
		}
		else
		{
			all=1300;
		}
		double ts=((bs+(0.20*bs)+(0.50*bs)+all)-(0.11*bs));
		double p=Math.round(ts);
		int h=(int)(p);
		System.out.println(h);
	}
}

/*CN5_3> Write a program that takes three numbers a,b, and c as input and prints the largest number amongst them.
Sample Input 1 :
4 6 1
Sample Output 1 :
6*/
ANS:
import java.util.* ;
import java.io.*; 
class Solution {
	
	public static void main(String args[]) {
		// Write code here
		Scanner sc = new Scanner(System.in);
		int a = sc.nextInt();
		int b = sc.nextInt();
		int c = sc.nextInt();

		if (a>b && a>c){
			System.out.print(a);
		}
		else if (b>a && b>c){
			System.out.print(b);
		}
		else{
			System.out.print(c);
		}
		
	}
}

/*CN5_4> Write a program to accept a coordinate point in an XY coordinate system and determine in which quadrant the coordinate point lies.
Print
"1st Quadrant": if  +x,+y
"2nd Quadrant": if -x,+y
"3rd Quadrant": if -x,-y
"4th Quadrant": if +x,-y
"x axis": if x,0
"y axis": if 0,y
"Origin": if 0,0*/
ANS:
import java.util.* ;
import java.io.*; 
class Solution {
	
	public static void main(String args[]) {
		// Write code here
		Scanner sc = new Scanner(System.in);
		int x = sc.nextInt();
		int y = sc.nextInt();

		if (x==0 && y==0) {
            System.out.println("Origin");
        } 
		else if(x==0) {
            System.out.println("y axis");
        } 
		else if(y==0){
            System.out.println("x axis");
		}
		else if(x>0 && y>0){
			System.out.println("1st Quadrant");
		}
		else if(x<0 && y>0){
            System.out.println("2nd Quadrant");
        } 
		else if(x<0 && y<0){
            System.out.println("3rd Quadrant");
        } 
		else if(x>0 && y<0){
            System.out.println("4th Quadrant");
        }
	}
}

/*CN5_5> You have been given a number 'N'. Your task is to find the sum of all even numbers from 1 to 'N' (both inclusive).
Example :
Given 'N' : 6
Sum of all even numbers till 'N' will be : 2 + 4 + 6 = 12*/
ANS:
import java.util.* ;
import java.io.*; 
public class Solution {
	public static long evenSumTillN(int n) {
		// Write your code here.
    	long sum = 0;
    	for (int i = 2; i <= n; i++) {
        	if (i % 2 == 0) {
            	sum += i;
        	}
    	}
   		return sum;
	}
}

/*CN5_6> Given three values - Start Fahrenheit Value (S), End Fahrenheit value (E), and Step Size (W), you need to convert all Fahrenheit values from Start to End at the gap of W into their corresponding Celsius values and print the table.
Sample Input 1:
0 
100 
20
Sample Output 1:
0   -17
20  -6
40  4
60  15
80  26
100 37*/
ANS:
import java.util.* ;
import java.io.*; 
class Solution {
	public static void main(String args[]) {
		// Write code here
		Scanner sc = new Scanner(System.in);
		int S = sc.nextInt();
		int E = sc.nextInt();
		int W = sc.nextInt();
		int c;
		while(S<=E)
        {
            c=((5*(S-32))/9);
             System.out.println(S+" "+c);
            S+=W;
        }
	}
}

/*CN5_7> Write a program to input an integer N and print the sum of all its even digits and all its odd digits separately.
Digits mean numbers, not the places! If the given integer is "13245", the even digits are 2 and 4, and the odd digits are 1, 3, and 5.
Detailed explanation ( Input/output format, Notes, Images )
Constraints
0 <= N <= 10^8
Sample Input 1:
1234
Sample Output 1:
6 4*/
ANS:
import java.util.*;
class Solution {
	public static void main(String args[]) {
		// Write code here
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int even=0;
		int odd = 0;
		int dig;
		while(n!=0){
			dig = n%10;
			if(dig%2==0){
				even +=dig;
			}
			else{
				odd+=dig;
			}
			n=n/10;
		}
		System.out.print(even+" "+odd);
		
	}
}

/*CN5_8> Write a program to find x to the power n (i.e., x^n). Take x and n from the user. You need to print the answer.
Sample Input 1 :
 3 4
Sample Output 1 :
81*/
ANS:
import java.util.*;
class Solution {
	public static void main(String args[]) {
		Scanner sc = new Scanner(System.in);
		int x = sc.nextInt();
		int n = sc.nextInt();
		int result = 1;
		
	if(n == 0) {
		result = 1;
		} 
	else {
		while(n>0){
			result=result*x;
			n--;
		}
	}
		System.out.print(result);
	}
}

/*CN5_9> Write a program to find the factorial of a number.
Factorial of n is:  n! = n * (n-1) * (n-2) * (n-3)....* 1
Output the factorial of 'n'. If it does not exist, output 'Error'.
Sample Input 1 :
5
Sample Output 1 :
120*/
ANS:
import java.util.*;
class Solution {
	public static void main(String args[]) {
		// Write code here
		Scanner sc=new Scanner (System.in);
        int n=sc.nextInt();
        int fact=1;
        if(n==0 || n==1){
            System.out.println("1");
        }
        else if(n<0){
            System.out.println("Error");
        }
        else{
            for(int i=1;i<=n;i++){
                fact=fact*i;
            }
            System.out.println(fact);
        }
    }
}

/*CN5_10> You are given an integer ‘N’, your task is to find and return the N’th Fibonacci number using matrix exponentiation.
Since the answer can be very large, return the answer modulo 10^9 +7.
Fibonacci number is calculated using the following formula:
F(n) = F(n-1) + F(n-2), 
Where, F(1) = F(2) = 1.
Sample Input 1:
2
10
7
Sample Output 1:
55
13*/
ANS:
import java.util.* ;
import java.io.*; 

public class Solution{
    public static int fibonacciNumber(int n){
        int first=0;
        int second=1;
        int fib=0;
        int mod=(int)Math.pow(10,9)+7;

        if(n<=1){
            return n;
        }

        for(int i=2; i<=n; i++){
            fib=first+second;
            first=second;
            second=fib;
            if(second>=mod){
                second=second-mod;
            }
        }
        return second;
    }
}






